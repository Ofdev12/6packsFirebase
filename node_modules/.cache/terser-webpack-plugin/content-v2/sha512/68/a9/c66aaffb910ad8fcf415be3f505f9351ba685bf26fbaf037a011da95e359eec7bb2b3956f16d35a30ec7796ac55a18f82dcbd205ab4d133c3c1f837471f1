{"map":"{\"version\":3,\"sources\":[\"/Users/fredericolive/Desktop/01/6packs/src/App.js\",\"/Users/fredericolive/Desktop/01/6packs/src/serviceWorker.js\",\"/Users/fredericolive/Desktop/01/6packs/src/index.js\"],\"names\":[\"apiKey\",\"process\",\"REACT_APP_API_KEY\",\"projectId\",\"REACT_APP_PROJECT_ID\",\"config\",\"concat\",\"authDomain\",\"databaseURL\",\"storageBucket\",\"firebase\",\"initializeApp\",\"db\",\"firestore\",\"settings\",\"timestampsInSnapshots\",\"App\",\"state\",\"inputValue\",\"todos\",\"handleSubmit\",\"e\",\"preventDefault\",\"todo\",\"value\",\"_this\",\"quantity\",\"archived\",\"collection\",\"doc\",\"set\",\"setState\",\"handleChange\",\"target\",\"_this2\",\"this\",\"unsubscribe\",\"onSnapshot\",\"snapshot\",\"forEach\",\"push\",\"data\",\"react_default\",\"a\",\"createElement\",\"className\",\"onSubmit\",\"type\",\"onChange\",\"map\",\"i\",\"key\",\"onClick\",\"update\",\"delete\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'\\n\\nimport firebase from 'firebase/app'\\nimport 'firebase/firestore'\\nimport \\\"./app.css\\\"\\n\\nconst apiKey = process.env.REACT_APP_API_KEY || \\\"AIzaSyA0d-9Xa0sIbn75OdH8EfKg2m_RxSVJORg\\\"\\nconst projectId = process.env.REACT_APP_PROJECT_ID || \\\"todos-c769e\\\"\\n\\nconst config = {\\n  apiKey: apiKey,\\n  projectId: `${projectId}`,\\n  authDomain: `${projectId}.firebaseapp.com`,\\n  databaseURL: `https://${projectId}.firebaseio.com`,\\n  storageBucket: `${projectId}.appspot.com`,\\n}\\nfirebase.initializeApp(config)\\n\\nconst db = firebase.firestore()\\ndb.settings({ timestampsInSnapshots: true })\\n\\nclass App extends Component {\\n\\n  state = {\\n    inputValue: '',\\n    todos: []\\n  }\\n\\n  handleSubmit = e => {\\n    e.preventDefault()\\n\\n    const todo = {\\n      value: this.state.inputValue,\\n      quantity: 1,\\n      archived: false\\n    }\\n\\n    db.collection('todos').doc(todo.value).set(todo)\\n    e.preventDefault()\\n    this.setState({ inputValue: ''})\\n  }\\n\\n  handleChange = e => {\\n    this.setState({ inputValue: e.target.value })\\n  }\\n\\n\\n  componentDidMount() {\\n    // update state when 'todos' collection changes\\n    this.unsubscribe = db.collection('todos')\\n      .onSnapshot(snapshot => {\\n        const todos = []\\n        snapshot.forEach(doc => todos.push(doc.data()))\\n\\n        this.setState({ todos })\\n      })\\n  }\\n\\n  componentWillUnmount() {\\n    this.unsubscribe()\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <div  className='block'>\\n          <h2>shopping list</h2>\\n          <form onSubmit={this.handleSubmit}>\\n            <input type=\\\"text\\\" value={this.state.inputValue} onChange={this.handleChange} />\\n            <input type=\\\"submit\\\" value=\\\"add\\\" />\\n          </form>\\n        </div>  \\n        <div className='block'>\\n          { this.state.todos.map((todo, i) =>\\n            <ul key={i}>\\n              <li>\\n                <button onClick={e => db.collection('todos').doc(todo.value).update({ quantity: todo.quantity - 1 })}>-</button>\\n                <span>( {todo.quantity} )</span>\\n                <button onClick={e => db.collection('todos').doc(todo.value).update({ quantity: todo.quantity + 1 })}>+</button>\\n                <span className={ todo.archived ? \\\"archived\\\" : \\\"\\\" } onClick={e => db.collection('todos').doc(todo.value).update({ archived : !todo.archived })}> {todo.value} </span>\\n                <button onClick={e => db.collection('todos').doc(todo.value).delete()}>x</button>\\n              </li>\\n            </ul>) }\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default App\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(t,e,n){t.exports=n(31)},17:function(t,e,n){},29:function(t,e,n){},31:function(t,e,n){\"use strict\";n.r(e);var a=n(0),o=n.n(a),c=n(6),i=n.n(c),u=(n(17),n(7)),l=n(8),r=n(10),s=n(9),d=n(11),p=n(2),m=n.n(p),h=(n(25),n(29),Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).REACT_APP_API_KEY||\"AIzaSyA0d-9Xa0sIbn75OdH8EfKg2m_RxSVJORg\"),v=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).REACT_APP_PROJECT_ID||\"todos-c769e\",f={apiKey:h,projectId:\"\".concat(v),authDomain:\"\".concat(v,\".firebaseapp.com\"),databaseURL:\"https://\".concat(v,\".firebaseio.com\"),storageBucket:\"\".concat(v,\".appspot.com\")};m.a.initializeApp(f);var b=m.a.firestore();b.settings({timestampsInSnapshots:!0});var E=function(t){function e(){var t,n;Object(u.a)(this,e);for(var a=arguments.length,o=new Array(a),c=0;c<a;c++)o[c]=arguments[c];return(n=Object(r.a)(this,(t=Object(s.a)(e)).call.apply(t,[this].concat(o)))).state={inputValue:\"\",todos:[]},n.handleSubmit=function(t){t.preventDefault();var e={value:n.state.inputValue,quantity:1,archived:!1};b.collection(\"todos\").doc(e.value).set(e),t.preventDefault(),n.setState({inputValue:\"\"})},n.handleChange=function(t){n.setState({inputValue:t.target.value})},n}return Object(d.a)(e,t),Object(l.a)(e,[{key:\"componentDidMount\",value:function(){var t=this;this.unsubscribe=b.collection(\"todos\").onSnapshot(function(e){var n=[];e.forEach(function(t){return n.push(t.data())}),t.setState({todos:n})})}},{key:\"componentWillUnmount\",value:function(){this.unsubscribe()}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"div\",{className:\"block\"},o.a.createElement(\"h2\",null,\"shopping list\"),o.a.createElement(\"form\",{onSubmit:this.handleSubmit},o.a.createElement(\"input\",{type:\"text\",value:this.state.inputValue,onChange:this.handleChange}),o.a.createElement(\"input\",{type:\"submit\",value:\"add\"}))),o.a.createElement(\"div\",{className:\"block\"},this.state.todos.map(function(t,e){return o.a.createElement(\"ul\",{key:e},o.a.createElement(\"li\",null,o.a.createElement(\"button\",{onClick:function(e){return b.collection(\"todos\").doc(t.value).update({quantity:t.quantity-1})}},\"-\"),o.a.createElement(\"span\",null,\"( \",t.quantity,\" )\"),o.a.createElement(\"button\",{onClick:function(e){return b.collection(\"todos\").doc(t.value).update({quantity:t.quantity+1})}},\"+\"),o.a.createElement(\"span\",{className:t.archived?\"archived\":\"\",onClick:function(e){return b.collection(\"todos\").doc(t.value).update({archived:!t.archived})}},\" \",t.value,\" \"),o.a.createElement(\"button\",{onClick:function(e){return b.collection(\"todos\").doc(t.value).delete()}},\"x\")))})))}}]),e}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[12,2,1]]]);","extractedComments":[]}